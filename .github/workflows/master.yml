name: Master Branch Workflow

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  DOCKER_REGISTRY: docker.pkg.github.com

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: build docker image
      run: |
        LOWER_GH_REPO=$(echo "$GITHUB_REPOSITORY" | tr '[:upper:]' '[:lower:]')
        DOCKER_IMAGE=$DOCKER_REGISTRY/$LOWER_GH_REPO:$GITHUB_SHA
        docker build -t $DOCKER_IMAGE .
        echo "::set-env name=DOCKER_IMAGE::$DOCKER_IMAGE"
        echo "::set-output name=docker_image::$DOCKER_IMAGE"

    - name: set version
      id: set_version
      run: |
        VERSION=v$(cat VERSION)
        echo "::set-env name=VERSION::$VERSION"
        echo "::set-output name=version::$VERSION"

    - name: create release
      id: create_release
      if: github.event_name == 'push'
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_version.outputs.version }}
        release_name: ${{ steps.set_version.outputs.version }}

    - name: upload version file release asset
      id: upload_release_asset
      if: github.event_name == 'push'
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: VERSION
        asset_name: VERSION
        # asset_content_type: application/zip

    - name: publish docker image
      if: github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        docker push $DOCKER_IMAGE



    # - name: Tag and Publish # only run master branch changes
    #   if: github.event_name == 'push'
    #   run: |
    #     git tag $VERSION
    #     git push --tags
    #     echo "tagging image => $DOCKER_REGISTRY/$DOCKER_REPO:$GITHUB_SHA to $DOCKER_REGISTRY/$DOCKER_REPO:$VERSION"
        